---
name: chaos testing for kubi with Litmus
on:
  - push
jobs:
  kind:
    runs-on: ubuntu-latest
    name: create cluster KinD  with (1.21,1.23) Kub version
    strategy:
      fail-fast: false
      matrix:
        kubernetes:
          - 1.21
          - 1.23
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Create cluster KinD
        uses: helm/kind-action@v1.4.0
        with:
          config: .github/kind-cluster-${{ matrix.kubernetes }}.yaml
      - name: testing cluster kinD
        run: kubectl cluster-info --context kind-chart-testing echo " current-context:"
          $(kubectl config current-context)
                 
      - name: Setting up kubeconfig ENV for Github Chaos Action
        run: echo ::set-env name=KUBE_CONFIG_DATA::$(base64 -w 0 ~/.kube/config)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.1
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
          
      - name:  install cfssl 
        run: |
          get github.com/cloudflare/cfssl/cmd/cfssljson
          get github.com/cloudflare/cfssl/cmd/cfssl 
       
     # change value of kubi.devops.managed.kvm  
      - name: Create a crt signed by Kubernetes CA
        run: |
          cat <<EOF | cfssl genkey - | cfssljson -bare server
          {
            "hosts": [
              "kubi.devops.managed.kvm",
              "kubi-svc",
              "kubi-svc.kube-system",
              "kubi-svc.kube-system.svc",
              "kubi-svc.kube-system.svc.cluster.local",
              "kubi.devops.managed.kvm"
            ],
            "CN": "kubi-svc.kube-system.svc.cluster.local",
            "key": {
              "algo": "ecdsa",
              "size": 256
            }
          }
          EOF
     
      - name: create the signing request 
        run: |
           cat <<EOF | kubectl create -f -
           apiVersion: certificates.k8s.io/v1eta1
           kind: CertificateSigningRequest
           metadata:
             name: kubi-svc-kube-system
             
           soec:
            group:
            - system: authenticated
            request: $(cat server.csr | base64 | tr -d  '\n')
            usages: 
            - digital signature
            - key encipherment
            - server auth
           EOF
             
      - name: Approuve and recieve crt
        run : |
          kubectl certificate approve kubi-svc.kube-system
          kubectl get csr kubi-svc.kube-system -o jsonpath='{.status.certificate}'     | base64 --decode > server.crt
      
      - name: create secret for LDAP bind password
      
       
       
  release:
    name: Create Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component:
          - webhook
          - api
          - operator
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: cagip/kubi-${{ matrix.component }}
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.${{ matrix.component }}
          push: ${{ GitHub.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
        
   
      - name: Setup Litmus
        uses: litmuschaos/github-chaos-actions@master
        env:
          INSTALL_LITMUS: true
      - name: Running "pod-delete" chaos experiment
        uses: litmuschaos/github-chaos-actions@master
        env:
          EXPERIMENT_NAME: pod-delete
          EXPERIMENT_IMAGE: litmuschaos/go-runner
          EXPERIMENT_IMAGE_TAG: ci
          JOB_CLEANUP_POLICY: delete
          APP_NS: kubi
          APP_KIND: deployment
          IMAGE_PULL_POLICY: Always
          TOTAL_CHAOS_DURATION: 30
          CHAOS_INTERVAL: 10
          FORCE: false
          
      - name: Running "pod-network-latency" chaos experiment
        uses: litmuschaos/github-chaos-actions@master
        env:
          EXPERIMENT_NAME: pod-network-latency
          EXPERIMENT_IMAGE: litmuschaos/go-runner
          EXPERIMENT_IMAGE_TAG: ci
          JOB_CLEANUP_POLICY: delete
          APP_NS: kubi
          TOTAL_CHAOS_DURATION: 60
          NETWORK_INTERFACE: eth0
          NETWORK_LATENCY: 60000
          CONTAINER_RUNTIME: containerd
          
      - name: Running "pod-network-loss" chaos experiment
        uses: litmuschaos/github-chaos-actions@master
        env:
          EXPERIMENT_NAME: pod-network-loss
          EXPERIMENT_IMAGE: litmuschaos/go-runner
          EXPERIMENT_IMAGE_TAG: ci
          JOB_CLEANUP_POLICY: delete
          TARGET_CONTAINER: kubi
          TOTAL_CHAOS_DURATION: 60
          NETWORK_INTERFACE: eth0
          NETWORK_PACKET_LOSS_PERCENTAGE: 100
          CONTAINER_RUNTIME: containerd
          
      - name: Uninstall Litmus
        if: always()
        uses: litmuschaos/github-chaos-actions@master
        env:
          LITMUS_CLEANUP: true
